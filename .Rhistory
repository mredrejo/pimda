),
size = 3,
color = "grey",
nudge_y = 0.4,
nudge_x = -0.1
)
TPtree_all_noauto
listita
tp_all_noauto_tree <- groupOTU(tp_all_noauto_tree,listita )
tp_all_noauto_tree
TPs_all
# change tip labels
tp_all_noauto_tree$tip.label <- TPs_all$TPs_names[match(tp_all_noauto_tree$tip.label,TPs_all$ids_all2)]
tp_all_noauto_tree$tip.label
TPs_all$ids_all2
tp_all_noauto_tree <- read.tree("data/tectiTPs_all_noauto.aln.contree")
# change tip labels
tp_all_noauto_tree$tip.label <- TPs_all$TPs_names[match(tp_all_noauto_tree$tip.label,TPs_all$ids_all2)]
TPs_all$ids_all2
tp_all_noauto_tree$tip.label
tp_all_noauto_tree$tip.label[13] <- "Ignis"
tp_all_noauto_tree$tip.label
#assign the tax
listita <- as.list(aggregate(TPs_names_all~tax,TPs_all ,FUN=paste)[,2])
names(listita) <- as.list(aggregate(TPs_names_all~tax,TPs_all ,FUN=paste)[,1])
tp_all_noauto_tree <- groupOTU(tp_all_noauto_tree,listita )
#plot (see: https://yulab-smu.top/treedata-book/chapter13.html)
TPtree_all_noauto <- ggtree(tp_all_noauto_tree, aes(color=group)) +
geom_tiplab() +
scale_color_brewer(palette='Dark2') + geom_treescale(y=2,x=4) +
xlim(0, 8) +
geom_nodelab(
mapping = aes(
x = branch,
label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) > 50
),
size = 3,
color = "grey",
nudge_y = 0.4,
nudge_x = -0.1
)
TPtree_all_noauto
ggsave(file="figs/tectipols_noauto_nowip.svg", plot = tectipols_nowip, width=8, height=6)
tree2 <- read.tree("data/tectipols_noauto2.aln.contree")
# change tip labels
tree2$tip.label <- pols$pol_names[match(tree2$tip.label,pols$ids)]
#assign the tax
listita <- as.list(aggregate(pol_names~tax, pols,FUN=paste)[,2] )
names(listita) <- as.list(aggregate(pol_names~tax, pols,FUN=paste)[,1])
tree2 <- groupOTU(tree2,listita )
library(RColorBrewer)
#plot (see: https://yulab-smu.top/treedata-book/chapter13.html)
tectipols_nowip <- ggtree(tree2, aes(color=group)) +
geom_tiplab() +
scale_color_brewer(palette='Dark2') + geom_treescale(y=7,x=4) +
xlim(0, 5) +
geom_nodelab(
mapping = aes(
x = branch,
label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) > 50
),
size = 3,
color = "grey",
nudge_y = 0.4,
nudge_x = -0.1
)
ggsave(file="figs/tectipols_noauto_nowip.svg", plot = tectipols_nowip, width=8, height=6)
ggsave(file="figs/tectiTPs_all_noauto.svg", plot = TPtree_all_noauto, width=7, height=4)
TPs
tp_all_noauto_tree <- read.tree("data/tectiTPs2022_noauto.aln.contree")
tp_all_noauto_tree$tip.label
tp_all_noauto_tree$tip.label <- TPs$TPs_names[match(tp_all_noauto_tree$tip.label,TPs$V1)]
tp_all_noauto_tree$tip.label
tp_tree$tip.label[8] <- "Ignis"
#assign the tax
listita <- as.list(aggregate(TPs_names~TPs$tax,TPs ,FUN=paste)[,2])
listita
tp_all_noauto_tree <- groupOTU(tp_all_noauto_tree,listita )
tp2022_noauto_tree <- read.tree("data/tectiTPs2022_noauto.aln.contree")
tp2022_noauto_tree$tip.label <- TPs$TPs_names[match(tp2022_noauto_tree$tip.label,TPs$V1)]
tp2022_noauto_tree$tip.label[8] <- "Ignis"
tp2022_noauto_tree <- groupOTU(tp2022_noauto_tree,listita )
#plot (see: https://yulab-smu.top/treedata-book/chapter13.html)
TPtree_noauto <- ggtree(tp2022_noauto_tree, aes(color=group)) +
geom_tiplab() +
scale_color_brewer(palette='Dark2') + geom_treescale(y=2,x=4) +
xlim(0, 4) +
geom_nodelab(
mapping = aes(
x = branch,
label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) > 50
),
size = 3,
color = "grey",
nudge_y = 0.4,
nudge_x = -0.1
)
TPtree_noauto
ggsave(file="figs/tectiTPs_noauto.svg", plot = TPtree, width=6, height=4)
ggsave(file="figs/tectiTPs_noauto.svg", plot = TPtree_noauto, width=6, height=4)
TPs
listita
pols$tax[pols$pol_names %in% c("PRD1","PR772","PR4","PR5","L17","PR3")] <- "Alphatectivirus"
#assign the tax
listita <- as.list(aggregate(pol_names~tax, pols,FUN=paste)[,2] )
names(listita) <- as.list(aggregate(pol_names~tax, pols,FUN=paste)[,1])
tp2022_noauto_tree <- groupOTU(tp2022_noauto_tree,listita )
#plot (see: https://yulab-smu.top/treedata-book/chapter13.html)
TPtree_noauto <- ggtree(tp2022_noauto_tree, aes(color=group)) +
geom_tiplab() +
scale_color_brewer(palette='Dark2') + geom_treescale(y=2,x=4) +
xlim(0, 4) +
geom_nodelab(
mapping = aes(
x = branch,
label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) > 50
),
size = 3,
color = "grey",
nudge_y = 0.4,
nudge_x = -0.1
)
TPtree_noauto
listita
#assign the tax
listita <- as.list(aggregate(TPs_names_all~tax,TPs_all ,FUN=paste)[,2])
lisi
listita
names(listita) <- as.list(aggregate(TPs_names_all~tax,TPs_all ,FUN=paste)[,1])
listita
tree2 <- read.tree("data/tectipols_noauto2.aln.contree")
# change tip labels
tree2$tip.label <- pols$pol_names[match(tree2$tip.label,pols$ids)]
tree2 <- groupOTU(tree2,listita )
#plot (see: https://yulab-smu.top/treedata-book/chapter13.html)
tectipols_nowip <- ggtree(tree2, aes(color=group)) +
geom_tiplab() +
scale_color_brewer(palette='Dark2') + geom_treescale(y=7,x=4) +
xlim(0, 5) +
geom_nodelab(
mapping = aes(
x = branch,
label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) > 50
),
size = 3,
color = "grey",
nudge_y = 0.4,
nudge_x = -0.1
)
tp2022_noauto_tree <- groupOTU(tp2022_noauto_tree,listita )
#plot (see: https://yulab-smu.top/treedata-book/chapter13.html)
TPtree_noauto <- ggtree(tp2022_noauto_tree, aes(color=group)) +
geom_tiplab() +
scale_color_brewer(palette='Dark2') + geom_treescale(y=2,x=4) +
xlim(0, 4) +
geom_nodelab(
mapping = aes(
x = branch,
label = label,
subset = !is.na(as.numeric(label)) & as.numeric(label) > 50
),
size = 3,
color = "grey",
nudge_y = 0.4,
nudge_x = -0.1
)
TPtree_noauto
ggsave(file="figs/tectiTPs_noauto.svg", plot = TPtree_noauto, width=6, height=4)
ggsave(file="figs/tectipols_noauto_nowip.svg", plot = tectipols_nowip, width=8, height=5)
ggsave(file="figs/tectiTPs_noauto.svg", plot = TPtree_noauto, width=5, height=3)
BiocManager::install("drawProteins")
pols2
pols2 <- merge(pols_seq$nam,motifs, by = NULL)
pols_seq <- read.alignment("data/tectipols.aln", format="fasta")
library(seqinr)
pols_seq <- read.alignment("data/tectipols.aln", format="fasta")
motifs <- c("Exo","Palm_1","TPR1","Fingers","TPR2","Palm_2","Thumb")
pols2 <- merge(pols_seq$nam,motifs, by = NULL)
colnames(pols2) <- c("IDs","description")
pols2$virus <- pols$pol_names[match(pols2$IDs,pols$ids)]
pols2$begin <- NA
pols2$begin[pols2$description==unique(pols2$description)[1]] <- rep(1,25)
pols2$begin[pols2$description==unique(pols2$description)[2]] <- c(190,212,212,230,212,202,202,219,173,173,173,173,173,178,169,169,169,169,171,171,162,239,258,188,304)
pols2$begin[pols2$description==unique(pols2$description)[3]] <- c(261,285,285,303,283,273,273,290,235,235,235,235,235,249,232,232,232,232,234,234,225,320,339,270,390)
pols2$begin[pols2$description==unique(pols2$description)[4]] <- c(359,382,382,400,380,374,374,391,315,315,315,315,315,330,318,318,318,318,320,320,312,413,432,356,495)
pols2$begin[pols2$description==unique(pols2$description)[5]]<- c(395,418,418,436,416,410,410,427,355,355,355,355,355,370,358,358,358,358,360,360,352,451,470,395,534)
pols2$begin[pols2$description==unique(pols2$description)[6]]<- c(427,469,469,489,467,462,462,479,403,403,403,403,403,424,410,410,410,410,412,412,402,461,480,412,464)
pols2$begin[pols2$description==unique(pols2$description)[7]]<- c(531,610,610,628,604,606,606,623,536,536,536,536,536,530,514,514,514,514,516,516,506,596,615,558,752)
pols2$end <- NA
pols2$end[pols2$description==unique(pols2$description)[1]] <- pols2$begin[pols2$description==unique(pols2$description)[2]] - 1
pols2$end[pols2$description==unique(pols2$description)[2]] <- pols2$begin[pols2$description==unique(pols2$description)[3]] - 1
pols2$end[pols2$description==unique(pols2$description)[3]] <- pols2$begin[pols2$description==unique(pols2$description)[4]] - 1
pols2$end[pols2$description==unique(pols2$description)[4]] <- pols2$begin[pols2$description==unique(pols2$description)[5]] - 1
pols2$end[pols2$description==unique(pols2$description)[5]] <- pols2$begin[pols2$description==unique(pols2$description)[6]] - 1
pols2$end[pols2$description==unique(pols2$description)[6]] <- pols2$begin[pols2$description==unique(pols2$description)[7]] - 1
tama <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(tama) <- c("prot","length")
pols_seq <- read.fasta("data/tectipols.faa")
for (i in 1:length(names(pols_seq)))
{
tama[i,] <- cbind(getName(pols_seq[[i]]),length(pols_seq[[i]]))
}
pols2$end[pols2$description==unique(pols2$description)[7]] <- tama$length[match(pols2$IDs[(pols2$description)=="Thumb"],tama$prot)]
pols2$type <- rep("DOMAIN",175)
#merge chains and domains
tama$begin <- rep(1,25)
pols_seq
names(pols_seq)
pols_seq <- read.fasta("data/tectipols.faa")
for (i in 1:length(names(pols_seq)))
{
tama[i,] <- cbind(getName(pols_seq[[i]]),length(pols_seq[[i]]))
}
pols2$end[pols2$description==unique(pols2$description)[7]] <- tama$length[match(pols2$IDs[(pols2$description)=="Thumb"],tama$prot)]
pols2$type <- rep("DOMAIN",175)
#merge chains and domains
tama$begin <- rep(1,25)
length(names(pols_seq))
pols_seq <- read.fasta("data/tectipols.faa")
length(names(pols_seq))
pols_seq <- read.fasta("data/tectipols.faa")
length(names(pols_seq))
for (i in 1:length(names(pols_seq)))
{
tama[i,] <- cbind(getName(pols_seq[[i]]),length(pols_seq[[i]]))
}
pols2$end[pols2$description==unique(pols2$description)[7]] <- tama$length[match(pols2$IDs[(pols2$description)=="Thumb"],tama$prot)]
pols2$type <- rep("DOMAIN",175)
#merge chains and domains
tama$begin <- rep(1,25)
tama$begin <- rep(1,25)
tama <- cbind(tama$prot,tama$begin,tama$length,rep("CHAIN",25))
tama <- as.data.frame(tama)
colnames(tama) <- c("IDs","begin","end","type")
tama$virus <- pols$pol_names[match(tama$IDs,pols$ids)]
#order the data by the tree
tama <- tama[match(pol_names, tama$virus),]
#merge pols2 & tama
pols3 <- plyr:::rbind.fill(pols2,tama)
pols3$description[is.na(pols3$description)] <- paste(pols3$virus[is.na(pols3$description)],"DNA polymerase")
pols3$length <- as.integer(pols3$end) - as.integer(pols3$begin)
pols3$order <- rev(as.integer(factor(pols$pol_names,levels=pol_names)))
pols3$order <- rev(as.integer(factor(pols$pol_names,levels=pol_names)))
pols$pol_names
factor(pols$pol_names,levels=pol_names)
pol_names
as.integer(factor(pols$pol_names,levels=pol_names))
pols3$order
pols3$order <- rev(as.integer(factor(pols$pol_names,levels=pol_names)))
pols3
pols_names
pol_names
pol_names <- c("Phi29","Bam35","GIL01","GIL16","AP50","Ignis","Sole","Sato","PRD1","PR772","L17","PR4","PR5","GC1","WheeHeim","Forthebois","Toil","Wip1","1.095.O","1.044.O","1.020.O","1.080.O","1.008.O","1.011.O","1.249.A")
pols3$length <- as.integer(pols3$end) - as.integer(pols3$begin)
pols3$order <- rev(as.integer(factor(pols3$pol_names,levels=pol_names)))
colnames(pols3)
pols3$order <- rev(as.integer(factor(pols3$virus,levels=pol_names)))
pols4 <- pols3[,c(6,2,4,5,7,1,3,8)]
pols4[,3] <- as.numeric(pols4[,3])
pols4[,4] <- as.numeric(pols4[,4])
pols4[,5] <- as.numeric(pols4[,5])
pols4[,8] <- as.integer(pols4[,8])
colnames(pols4) <- c("type","description","begin","end","length","accession","entryName","order")
#make sure of the order
pols4 <- pols4[order(match(pols4$entryName,pol_names)),]
pols4$order <- rev(as.integer(factor(pols4$entryName, levels=pol_names)))
#plot
p <- draw_canvas(pols4) # + ggplot2:::scale_color_brewer(palette="Set1") ##didn't work :(
# BiocManager::install("drawProteins")
library(drawProteins)
library(seqinr)
p <- draw_canvas(pols4) # + ggplot2:::scale_color_brewer(palette="Set1") ##didn't work :(
p <- draw_chains(p, pols4,  fill = "lightsteelblue1",
outline = "grey", label_chains = TRUE,
label_size = 5)
p <- draw_domains(p, pols4,label_domains = F)
q <- p+theme_bw(base_size = 20)
ggsave(file="figs/pols_domains_raw_new.svg", plot = q, width=15, height=7)
install.packages(ggmsa)
BiocManager::install("ggmsa")
pols4
factor(pols4$entryName)
levels(pol_names)
pol_names
tama$begin <- rep(1,25)
pols3$description[is.na(pols3$description)] <- paste(pols3$virus[is.na(pols3$description)],"DNA polymerase")
pols3$length <- as.integer(pols3$end) - as.integer(pols3$begin)
pols3$order <- rev(as.integer(factor(pols3$virus,levels=pol_names)))
pols4 <- pols3[,c(6,2,4,5,7,1,3,8)]
pols4[,3] <- as.numeric(pols4[,3])
pols4[,4] <- as.numeric(pols4[,4])
pols4[,5] <- as.numeric(pols4[,5])
pols4[,8] <- as.integer(pols4[,8])
colnames(pols4) <- c("type","description","begin","end","length","accession","entryName","order")
#make sure of the order
pols4 <- pols4[order(match(pols4$entryName,pol_names)),]
pols4$order <- rev(as.integer(factor(pols4$entryName, levels=pol_names)))
#plot
p <- draw_canvas(pols4)
p
p <- draw_chains(p, pols4,  fill = "lightsteelblue1",
outline = "grey", label_chains = TRUE,
label_size = 5)
p
colnames(pol4)
colnames(pols4)
pols3
ids
ids <- c("YP_002004529.1","NP_943751.1","CAD59946.1","YP_224103.1","YP_002302517.1","Ignis","QWE49657.1","QWE49626.1","YP_009639956.1","AAX45532.1","AAR99740.1","YP_337983.1","AAX45625.1","YP_009620046.1","YP_010084070.1","YP_010084034.1","YP_010084103.1","YP_008433325.1","AUR87130.1","YP_010084158.1","YP_010084201.1","YP_010084220.1","YP_010084180.1","AUR81634.1","YP_010084136.1")
ids
pols2$IDs
pols$ids
pols2$virus <- pols$pol_names[match(pols2$IDs,ids)]
pols2$virus
pols2$IDs
ids
[match(pols2$IDs,ids)
match(pols2$IDs,ids)
length(pols_seq$nam)
pols_seq$nam
pols_seq
name(pols_seq)
names(pols_seq)
merge(names(pols_seq),motifs, by = NULL)
pols2 <- merge(names(pols_seq),motifs, by = NULL)
colnames(pols2) <- c("IDs","description")
pols2$virus <- pols$pol_names[match(pols2$IDs,ids)]
factor(pols2$virus)
ids
factor(pols2$IDs)
match(pols2$IDs,ids)
pols2$virus <- pols$pol_names[match(pols2$IDs,ids)]
pols2$virus
pol_names
pols$pol_names
pols2$virus <- pol_names[match(pols2$IDs,ids)]
pols2$virus
pols_seq <- read.alignment("data/tectipols.aln", format="fasta")
motifs <- c("Exo","Palm_1","TPR1","Fingers","TPR2","Palm_2","Thumb")
pols2 <- merge(names(pols_seq),motifs, by = NULL)
colnames(pols2) <- c("IDs","description")
pols2$virus <- pol_names[match(pols2$IDs,ids)]
pols2$begin <- NA
pols2$begin[pols2$description==unique(pols2$description)[1]] <- rep(1,25)
pols2$begin[pols2$description==unique(pols2$description)[2]] <- c(190,212,212,230,212,202,202,219,173,173,173,173,173,178,169,169,169,169,171,171,162,239,258,188,304)
pols2$begin[pols2$description==unique(pols2$description)[3]] <- c(261,285,285,303,283,273,273,290,235,235,235,235,235,249,232,232,232,232,234,234,225,320,339,270,390)
pols2$begin[pols2$description==unique(pols2$description)[4]] <- c(359,382,382,400,380,374,374,391,315,315,315,315,315,330,318,318,318,318,320,320,312,413,432,356,495)
pols2$begin[pols2$description==unique(pols2$description)[5]]<- c(395,418,418,436,416,410,410,427,355,355,355,355,355,370,358,358,358,358,360,360,352,451,470,395,534)
pols2$begin[pols2$description==unique(pols2$description)[6]]<- c(427,469,469,489,467,462,462,479,403,403,403,403,403,424,410,410,410,410,412,412,402,461,480,412,464)
pols2$begin[pols2$description==unique(pols2$description)[7]]<- c(531,610,610,628,604,606,606,623,536,536,536,536,536,530,514,514,514,514,516,516,506,596,615,558,752)
pols2$end <- NA
pols2$end[pols2$description==unique(pols2$description)[1]] <- pols2$begin[pols2$description==unique(pols2$description)[2]] - 1
pols2$end[pols2$description==unique(pols2$description)[2]] <- pols2$begin[pols2$description==unique(pols2$description)[3]] - 1
pols2$end[pols2$description==unique(pols2$description)[3]] <- pols2$begin[pols2$description==unique(pols2$description)[4]] - 1
pols2$end[pols2$description==unique(pols2$description)[4]] <- pols2$begin[pols2$description==unique(pols2$description)[5]] - 1
pols2$end[pols2$description==unique(pols2$description)[5]] <- pols2$begin[pols2$description==unique(pols2$description)[6]] - 1
pols2$end[pols2$description==unique(pols2$description)[6]] <- pols2$begin[pols2$description==unique(pols2$description)[7]] - 1
tama <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(tama) <- c("prot","length")
pols_seq <- read.fasta("data/tectipols.faa")
for (i in 1:length(names(pols_seq)))
{
tama[i,] <- cbind(getName(pols_seq[[i]]),length(pols_seq[[i]]))
}
pols2$end[pols2$description==unique(pols2$description)[7]] <- tama$length[match(pols2$IDs[(pols2$description)=="Thumb"],tama$prot)]
pols2$type <- rep("DOMAIN",175)
#merge chains and domains
tama$begin <- rep(1,25)
pols2$end[pols2$description==unique(pols2$description)[7]] <- tama$length[match(pols2$IDs[(pols2$description)=="Thumb"],tama$prot)]
pols2$type <- rep("DOMAIN",175)
length(names(pols_seq))
pols
pols <- data.frame(pol_names,ids)
pols2$virus <- pols$pol_names[match(pols2$IDs,pols$ids)]
pols2$virus
pols <- data.frame(pol_names,ids)
pols
pols2
pols2 <- merge(names(pols_seq),motifs, by = NULL)
colnames(pols2) <- c("IDs","description")
pols2$virus <- pols$pol_names[match(pols2$IDs,pols$ids)]
pols2$virus
pols_seq <- read.alignment("data/tectipols.aln", format="fasta")
motifs <- c("Exo","Palm_1","TPR1","Fingers","TPR2","Palm_2","Thumb")
pols <- data.frame(pol_names,ids)
pols2 <- merge(names(pols_seq),motifs, by = NULL)
colnames(pols2) <- c("IDs","description")
pols2$virus <- pols$pol_names[match(pols2$IDs,pols$ids)]
pols2$begin <- NA
pols2$begin[pols2$description==unique(pols2$description)[1]] <- rep(1,25)
pols2$begin[pols2$description==unique(pols2$description)[2]] <- c(190,212,212,230,212,202,202,219,173,173,173,173,173,178,169,169,169,169,171,171,162,239,258,188,304)
pols2$begin[pols2$description==unique(pols2$description)[3]] <- c(261,285,285,303,283,273,273,290,235,235,235,235,235,249,232,232,232,232,234,234,225,320,339,270,390)
pols2$begin[pols2$description==unique(pols2$description)[4]] <- c(359,382,382,400,380,374,374,391,315,315,315,315,315,330,318,318,318,318,320,320,312,413,432,356,495)
pols2$begin[pols2$description==unique(pols2$description)[5]]<- c(395,418,418,436,416,410,410,427,355,355,355,355,355,370,358,358,358,358,360,360,352,451,470,395,534)
pols2$begin[pols2$description==unique(pols2$description)[6]]<- c(427,469,469,489,467,462,462,479,403,403,403,403,403,424,410,410,410,410,412,412,402,461,480,412,464)
pols2$begin[pols2$description==unique(pols2$description)[7]]<- c(531,610,610,628,604,606,606,623,536,536,536,536,536,530,514,514,514,514,516,516,506,596,615,558,752)
pols2$end <- NA
pols2$end[pols2$description==unique(pols2$description)[1]] <- pols2$begin[pols2$description==unique(pols2$description)[2]] - 1
pols2$end[pols2$description==unique(pols2$description)[2]] <- pols2$begin[pols2$description==unique(pols2$description)[3]] - 1
pols2$end[pols2$description==unique(pols2$description)[3]] <- pols2$begin[pols2$description==unique(pols2$description)[4]] - 1
pols2$end[pols2$description==unique(pols2$description)[4]] <- pols2$begin[pols2$description==unique(pols2$description)[5]] - 1
pols2$end[pols2$description==unique(pols2$description)[5]] <- pols2$begin[pols2$description==unique(pols2$description)[6]] - 1
pols2$end[pols2$description==unique(pols2$description)[6]] <- pols2$begin[pols2$description==unique(pols2$description)[7]] - 1
tama <- data.frame(matrix(ncol = 2, nrow = 0))
colnames(tama) <- c("prot","length")
pols_seq <- read.fasta("data/tectipols.faa")
for (i in 1:length(names(pols_seq)))
{
tama[i,] <- cbind(getName(pols_seq[[i]]),length(pols_seq[[i]]))
}
pols2$end[pols2$description==unique(pols2$description)[7]] <- tama$length[match(pols2$IDs[(pols2$description)=="Thumb"],tama$prot)]
pols2$type <- rep("DOMAIN",175)
sample(c(11,7,5),1)
sample(c(10,2,3),1)
projects <- sample(1:12, 12)
names(projects) <- sample(rep(c("Q1","Q2","Q3", "Q4"), each=3))
edit(projects)
fix(projects)
edit(projects)
scan()
kk <- scan()
kk
str <- readline()
str
scan(n=3)
vector <- scan(n=4)
print(vector)
vector()
vector2 <- scan()
vector2()
print(vector2)
vector3
vector
vector2
str
str <- readline()
str
vector <- scan(n=4)
vector2 <- scan()
str <- readline()
vector
print(vector2)
print(str)
edit(str)
edit(str)
#you must write an existing path
setwd("/Users/mredrejo/data/HPBBM2022")
getwd()
#input of setwd() is a string -> requires quotes
setwd("/Users/modesto")
getwd()
#you must write an existing path
setwd("/Users/mredrejo/data/HPBBM2022")
setwd("/Users/modesto/data/HPBBM2022")
getwd()
m <- c(6,9,42,43)
names(m) <- c("Mateo","Marcos","Mami","Papi")
barplot(m)
barplot(m, xlim=c(0,45))
barplot(m, xlim=c(0,4),ylim=c(0,45))
barplot(m, xlim=c(0,4),ylim=c(0,50))
barplot(m, xlim=c(0,4),ylim=c(0,50), col=c(rgb(1, 0, 0, 0.5), rgb(0, 1, 0, 0.5), rgb(0, 0,
1, 0.5), rgb(1, 0.5, 0, 0.5)))
par(mar = c(2, 2, 2, 2))
barplot(m, xlim=c(0,4),ylim=c(0,50), col=c(rgb(1, 0, 0, 0.5), rgb(0, 1, 0, 0.5), rgb(0, 0,
1, 0.5), rgb(1, 0.5, 0, 0.5)))
par(mar = c(2, 2, 2, 6))
barplot(m, xlim=c(0,4),ylim=c(0,50), col=c(rgb(1, 0, 0, 0.5), rgb(0, 1, 0, 0.5), rgb(0, 0,
1, 0.5), rgb(1, 0.5, 0, 0.5)))
sum(m)
m
barplot(m[4], xlim=c(0,4),ylim=c(0,50), col=c(rgb(1, 0, 0, 0.5), rgb(0, 1, 0, 0.5), rgb(0, 0,
1, 0.5), rgb(1, 0.5, 0, 0.5)))
barplot(m[4,1,2,3], xlim=c(0,4),ylim=c(0,50), col=c(rgb(1, 0, 0, 0.5), rgb(0, 1, 0, 0.5), rgb(0, 0,
1, 0.5), rgb(1, 0.5, 0, 0.5)))
barplot(m[4,1:3], xlim=c(0,4),ylim=c(0,50), col=c(rgb(1, 0, 0, 0.5), rgb(0, 1, 0, 0.5), rgb(0, 0,
1, 0.5), rgb(1, 0.5, 0, 0.5)))
barplot(m[4,1], xlim=c(0,4),ylim=c(0,50), col=c(rgb(1, 0, 0, 0.5), rgb(0, 1, 0, 0.5), rgb(0, 0,
1, 0.5), rgb(1, 0.5, 0, 0.5)))
barplot(m[c(4,1,2,3,4)], xlim=c(0,4),ylim=c(0,50), col=c(rgb(1, 0, 0, 0.5), rgb(0, 1, 0, 0.5), rgb(0, 0,
1, 0.5), rgb(1, 0.5, 0, 0.5)))
barplot(m[c(4,1,2,3)], xlim=c(0,4),ylim=c(0,50), col=c(rgb(1, 0, 0, 0.5), rgb(0, 1, 0, 0.5), rgb(0, 0,
1, 0.5), rgb(1, 0.5, 0, 0.5)))
barplot(m[c(2,4,3,1)], xlim=c(0,4),ylim=c(0,50), col=c(rgb(1, 0, 0, 0.5), rgb(0, 1, 0, 0.5), rgb(0, 0,
1, 0.5), rgb(1, 0.5, 0, 0.5)))
text(x=2,y=43, "Super")
abline(v=2)
text(x=2,y=45, "Super")
text(x=1,y=11, "listisimo")
text(x=4,y=8, "El mejor")
par(mar = c(2, 2, 2, 6))
barplot(m[c(2,4,3,1)], xlim=c(0,4),ylim=c(0,50), col=c(rgb(1, 0, 0, 0.5), rgb(0, 1, 0, 0.5), rgb(0, 0,
1, 0.5), rgb(1, 0.5, 0, 0.5)))
text(x=4,y=8, "El mejor")
res_aov <- aov(value~variable,data=gc_melt)
gc_contigs<- read.table("quast_results/gc_contigs_distributions.csv",head=FALSE,sep=",",na.strings = "")
getwd()
setwd(/Users/modesto/data/freeDNA/repo)
setwd("/Users/modesto/data/freeDNA/repo")
setwd("data/freeDNA/repo")
setwd("~/data/freeDNA_data/repo")
gc_contigs<- read.table("quast_results/gc_contigs_distributions.csv",head=FALSE,sep=",",na.strings = "")
gc_contigs <- t(gc_contigs)
colnames(gc_contigs) <- gc_contigs[1,]
gc_contigs <- gc_contigs[-1,]
gc_contigs <- as.data.frame(gc_contigs,row.names=FALSE)
gc_melt <-melt(gc_contigs,id.vars="GC",na.rm=F)
